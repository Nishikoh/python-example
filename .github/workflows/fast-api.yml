# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    paths:
      - ".github/workflows/fast-api.yml"
      - "./graph_ql_example/**"
    branches: [master]
  pull_request:
    paths:
      - ".github/workflows/fast-api.yml"
      - "./graph_ql_example/**"
    branches: [master]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v3
        with:
          python-version: "3.9"
          cache: "poetry"
      - name: Install dependencies
        # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          cd graph_ql_example
          # python -m pip install --upgrade pip
          # python -m venv venv
          # source .venv/bin/activate
          poetry install
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install flake8 pytest
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      #     cd graph_ql_example && pip install poetry && poetry update && poetry install
      - name: Lint with flake8
        run: |
          cd graph_ql_example
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          echo ${PWD}
          cd graph_ql_example && poetry run pytest  --doctest-modules -s -v --ff
          pytest  --doctest-modules -s -v --ff

  cached-poetry:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: graph_ql_example
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "poetry"
      - run: poetry install

  reuse:
    uses: Nishikoh/python-example/.github/workflows/resuse_workflow.yaml@resue-workflow
    with:
      versions: '[\"world\", \"hoge\"]'
